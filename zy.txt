10.什么是闭包?*  内存泄漏? 堆栈溢出有什么区别？ 怎么样防止内存泄漏

闭包：就是能够读取其他函数内部变量的函数。

内存泄露是指：
用动态存储分配函数内存空间，在使用完毕后未释放，导致一直占据该内存单元。
直到程序结束。//指一块被分配的内存既不能使用，又不能回收，直到浏览器进程结束
堆栈溢出：就是不顾堆栈中分配的局部数据块大小，向该数据块写入了过多的数据，导致数据越界
，结果覆盖了别的数据。经常会在递归中发生。
防止内存泄露：
1、不要动态绑定事件；
2、不要在动态添加，或者会被动态移除的dom上绑事件，用事件冒泡在父容器监听事件；
3、如果要违反上面的原则，必须提供destroy方法，保证移除dom后事件也被移除，
这点可以参考Backbone的源代码，做的比较好；
4、单例化，少创建dom，少绑事件。

33.$.map和$.each有什么区别

map()方法主要用来遍历操作数组和对象，会返回一个新的数组。$.map()方法适用于将数组或对象每个项目新阵列映射到一个新数组的函数；
each()主要用于遍历jquery对象，返回的是原来的数组，并不会新创建一个数组。

35.简述下工作流程

我在之前的公司工作流程大概是这样的：公司定稿会结束以后，会进行简单的技术研讨，
然后我们前端会进行先期的技术准备。
前端切图人员会进行psd设计稿切图，并且将css文件进行整合。
我们主要编写JS部分，其中包括搭建前端框架（大项目），
编写js业务和数据持久化操作，我们也会编写js插件并且进行封装方便使用，
还有就是编写JS前端组建和JS测试单元，
最后将完成的JS部分与切图人员提供的HTML页面进行整合。
最后对完成的页面进行功能测试、页面兼容、产品还原。
然后对产品进行封存，提交测试。
如果出现BUG会返回给我们开发人员进行修改，再提交测试，最后测试成功，进行版本封存。
等到程序全部上线的时候进行线上测试。


48.上一个项目是什么？主要负责哪些？购物车流程?支付功能?

 主要负责哪些就讲主要做哪些功能模块：

    1）商品模块:
          1、商品列表：商品排序 商品筛选 商品过滤 商品查询 商品推荐
          2、商品详情:类型推荐 商品简介 商品详情 商品评价 售后维护 

   2)购物车模块：

商品编号、数量、价格、总额、运费、运输选项、运费总计、
从购物车删除选项、更新数量、结账、继续购物、商品描述、库存信息


36.一般使用什么版本控制工具?svn如何对文件加锁

 svn加锁目的：

为了避免多个人同一时间对同一个文件改动的相互覆盖，版本控制系统就必须有一套冲突处理机制。
svn加锁两种策略：乐观加锁：所有签出的文件都是可读写的，对文件的修改不必获得文件的锁,
当你修改完文件签入时，会首先要求你更新本地文件，版本控制系统不会覆盖你的本地修改
，而是会让你自己合并冲突后签入。

 严格加锁：

所有签出的文件都是只读的，任何对文件的修改必须要获得文件的锁，
如果其他人没有拥有该文件的锁，那么版本控制系统就会授权给你文件的锁，并将文件设置为可编辑的
。
svn两种加锁步骤：

乐观加锁：选择你想要获取锁定的文件，然后右键菜单点击TortoiseSVN 选取获取锁定。
严格加锁：在想要采取严格加锁的文件或目录上点击右键，使用TortoiseSVN 属性菜单，
点击新建属性，选择需要锁定。

37. git 和 svn的区别?

SVN是集中式版本控制系统

，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，
所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，
需要把自己做完的活推送到中央服务器。
集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，
如果在互联网下，如果网速慢的话，就纳闷了。

Git是分布式版本控制系统，

那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，
这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。
既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？
比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，
这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。


39. $(function(){})和window.onload 	和 $(document).ready(function(){})

window.onload:用于当页面的所有元素，包括外部引用文件，图片等都加载完毕时运行函数内的函数。
load方法只能执行一次，如果在js文件里写了多个，只能执行最后一个。

 $(document).ready(function(){})和$(function(){})

都是用于当页面的标准DOM元素被解析成DOM树后就执行内部函数。
这个函数是可以在js文件里多次编写的，对于多人共同编写的js就有很大的优势，
因为所有行为函数都会执行到。
而且$(document).ready()函数在HMTL结构加载完后就可以执行，
不需要等大型文件加载或者不存在的连接等耗时工作完成才执行，效率高。

40. jq中 attr 和 prop 有什么区别

对于HTML元素本身就带有的固有属性，在处理时，使用prop方法。
对于HTML元素我们自己自定义的DOM属性，在处理时，使用attr方法。


40.渐进增强和优雅降级

渐进增强 progressive enhancement：

针对低版本浏览器进行构建页面，保证最基本的功能，
然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。

优雅降级 graceful degradation：

一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。



49.sessionStorage和localstroage 与 cookie之间有什么关联和区别，cookie最大存放多少字节

    三者共同点：都是保存在浏览器端，且同源的。

区别:
	
	1、cookie在浏览器和服务器间来回传递。
而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存

     2、存储大小限制也不同，
cookie数据不能超过4k，sessionStorage和localStorage 但比cookie大得多，可以达到5M

     3、数据有效期不同，
sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；
localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；
cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭

     4、作用域不同，
sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面(即数据不共享)；
localStorage 在所有同源窗口中都是共享的；
cookie也是在所有同源窗口中都是共享的（即数据共享）。


50.ajax中 get 和 post 有什么区别?

get和post都是数据提交的方式。
get的数据是通过网址问号后边拼接的字符串进行传递的。
post是通过一个HTTP包体进行传递数据的。
get的传输量是有限制的，post是没有限制的。
get的安全性可能没有post高，所以我们一般用get来获取数据，post一般用来修改数据。

43.ajax 和 jsonp ？

ajax和jsonp的区别：

相同点：都是请求一个url
不同点：ajax的核心是通过xmlHttpRequest获取内容
jsonp的核心则是动态添加<script>标签来调用服务器提供的js脚本。

44.ajax执行流程？

1. 创建XMLHttpRequest对象,也就是创建一个异步调用对象
2. 创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息
3. 设置响应HTTP请求状态变化的函数
4. 发送HTTP请求
5. 获取异步调用返回的数据
6. 使用JavaScript和DOM实现局部刷新

52.简述下你理解的面向对象？

   万物皆对象，把一个对象抽象成类,
具体上就是把一个对象的静态特征和动态特征抽象成属性和方法,
也就是把一类事物的算法和数据结构封装在一个类之中,
程序就是多个对象和互相之间的通信组成的.

  面向对象具有:
	封装性,继承性,多态性。

  封装:隐蔽了对象内部不需要暴露的细节,使得内部细节的变动跟外界脱离,
只依靠接口进行通信.封装性降低了编程的复杂性.
 通过继承,使得新建一个类变得容易,
一个类从派生类那里获得其非私有的方法和公用属性的繁琐工作交给了编译器.
 而 继承和实现接口和运行时的类型绑定机制 所产生的多态,
使得不同的类所产生的对象能够对相同的消息作出不同的反应,极大地提高了代码的通用性. 
 总之,面向对象的特性提高了大型程序的重用性和可维护性.

57.jsonp原理？ 缺点?

	工作原理：使用script标签实现跨域访问，可在url中指定回调函数，
	获取JSON数据并在指定的回调函数中执行jquery实现jsop。

	缺点：只支持GET方式的jsonp实现，是一种脚本注入行为存在一定的安全隐患。
	如果返回的数据格式有问题或者返回失败了，并不会报错。

68.JavaScript提供了哪几种“异步模式	”？
	1、回调函数（callbacks）
	2、事件监听
	3、Promise对象

69.什么是移动端的300ms延迟？什么是点击穿透？解决方案?

移动端300ms延迟：假定这么一个场景。用户在 浏览器里边点击了一个链接。
由于用户可以进行双击缩放或者双击滚动的操作，当用户一次点击屏幕之后，
浏览器并不能立刻判断用户是确实要打开这个链接，还是想要进行双击操作。
因此，浏览器 就等待 300 毫秒，以判断用户是否再次点击了屏幕。
也就是说，当我们点击页面的时候移动端浏览器并不是立即作出反应，
而是会等上一小会儿才会出现点击的效果。

点击穿透：

假如页面上有两个元素A和B。B元素在A元素之上。
我们在B元素的touchstart事件上注册了一个回调函数，该回调函数的作用是隐藏B元素。
我们发现，当我们点击B元素，B元素被隐藏了，
随后，A元素触发了click事件。
这是因为在移动端浏览器，事件执行的顺序是touchstart > touchend > click
。而click事件有300ms的延迟，当touchstart事件把B元素隐藏之后，
隔了300ms，浏览器触发了click事件，但是此时B元素不见了，所以该事件被派发到了A元素身上
。如果A元素是一个链接，那此时页面就会意外地跳转。

300ms延迟解决方案：

（1）禁用缩放，在html文档头部加meta标签如下：
         <meta name=”viewport” content=”user-scalable=no”/>
（2）更改默认的视口宽度 （响应式布局，消除了站点上可能存在的双击绽放的请求）
<meta name=”viewport” content=”width=device-width”/>
（3）Css touch-action
     touch-action:none;在该元素上的操作不会触发用户代理的任何行为，无需进行3000ms延迟判断。
（4）FastClick为解决移动端浏览器300毫秒延迟开发的一个轻量级的库

点击穿透解决方案：

（1）只用touch
（2）只用click
（3）tap后延迟350ms再隐藏mask
（4）pointer-events

75.bootstrap好处？

自适应和响应式布局，12栅格系统，统一的界面风格和css样式有利于团队开发。
编写灵活、稳定、高质量的 HTML 和 CSS 代码的规范。

76.开发时如何对项目进行管理?gulp?

答：本人开发时，利用gulp等前端工作流管理工具管理项目。

gulp是新一代的前端项目构建工具，
你可以使用gulp及其插件对你的项目代码（less,sass）进行编译，
还可以压缩你的js和css代码，甚至压缩你的图片，能够合并文件，压缩文件，语法检查，
监听文件变化，测试，转换二进制，转换图片等一系列功能。
gulp仅有少量的API，所以非常容易学习。实现良好的项目管理。


78.ajax请求方式有几种（8种）？
1）$.get(url,[data],[callback])
2）$.getJSON(url,[data],[callback])
3）$.post(url,[data],[callback],[type])
4）$.ajax(opiton)
5）$.getScript( url, [callback] )
6）jquery对象.load( url, [data], [callback] )
7）serialize() 与 serializeArray()
（知道的同学麻烦补充下）


77.压缩合并目的？http请求的优化方式？

答：1）Web性能优化最佳实践中最重要的一条是减少HTTP请求。
而减少HTTP请求的最主要的方式就是，

合并并压缩JavaScript和CSS文件。
	CSS Sprites（CSS精灵）：  
	合并脚本和样式表;

   图片地图：
  ④图片js/css等静态资源放在静态服务器或CDN服时，尽量采用不用的域名，这样能防止cookie不会互相污染，减少每次请求的往返数据。
⑤css替代图片
⑥缓存一些数据
⑦用location.href 代替location,reload


81.简述一下你理解的面向对象？
面向对象是基于万物皆对象这个哲学观点. 
把一个对象抽象成类,具体上就是把一个对象的(静态特征)和(动态特征)抽象成属性和方法,
也就是把一类事物的(算法)和(数据结构)封装在一个类之中,
程序就是多个对象和互相之间的通信组成的.

  面向对象具有 de 特点
	封装性,继承性,多态性。

  封装:隐蔽了对象内部不需要暴露的细节,使得内部细节的变动跟外界脱离,只依靠接口进行通信.
封装性降低了编程的复杂性. 通过继承,使得新建一个类变得容易,
一个类从派生类那里获得其非私有的方法和公用属性的繁琐工作交给了编译器.
 而 继承和实现接口和运行时的类型绑定机制 所产生的多态,
使得不同的类所产生的对象能够对相同的消息作出不同的反应,
极大地提高了代码的通用性. 
 总之,面向对象的特性提高了大型程序的（重用性）和（可维护性）.


82.如何创建一个对象？
1. 工厂模式
2. 构造函数模式
3. 原型模式
4. 混合构造函数和原型模式
5. 动态原型模式
6. 寄生构造函数模式
7. 稳妥构造函数模式


程序的设计模式?工厂模式?发布订阅?

1）设计模式并不是某种语言的某块代码，设计模式是一种思想，
提供给在编码时候遇到的各种问题是可以采取的解决方案，
更倾向于一种逻辑思维，而不是万能代码块。

设计模式主要分三个类型: 创建型、结构型和行为型。

创建型模式：单例模式，抽象工厂模式，建造者模式，工厂模式与原型模式。

结构型模式：适配器模式，桥接模式，装饰者模式，组合模式，外观模式，享元模式以及代理模式。

行为型模式：模板方法模式，命令模式，迭代器模式，观察者模式，中介者模式，备忘录模式，
解释器模式，状态模式，策略模式，职责链模式和访问者模式。

2）与创建型模式类似，工厂模式创建对象（视为工厂里的产品）是无需指定创建对象的具体类。
工厂模式定义一个用于创建对象的接口，这个接口由子类决定实例化哪一个类。
该模式使一个类的实例化延迟到了子类。
而子类可以重写接口方法以便创建的时候指定自己的对象类型。

3）观察者模式又叫做发布订阅模式，它定义了一种一对多的关系，
让多个观察者对象同时监听某一个主题对象，
这个主题对象的状态发生改变时就会通知所有观察着对象。
它是由两类对象组成，主题和观察者，主题负责发布事件，
同时观察者通过订阅这些事件来观察该主体，发布者和订阅者是完全解耦的
，彼此不知道对方的存在，两者仅仅共享一个自定义事件的名称。

83.commonjs?requirejs?AMD|CMD|UMD?

1.CommonJS
就是为JS的表现来制定规范，NodeJS是这种规范的实现，
webpack 也是以CommonJS的形式来书写。因为js没有模块的功能所以CommonJS应运而生。
但它不能在浏览器中运行。

CommonJS定义的模块分为:
{模块引用(require)} {模块定义(exports)} {模块标识(module)}

2.RequireJS 
是一个JavaScript模块加载器。它非常适合在浏览器中使用，但它也可以用在其他脚本环境,
 就像 Rhino and Node. 使用RequireJS加载模块化脚本将提高代码的加载速度和质量。

3.AMD 
是 RequireJS 在推广过程中对模块定义的规范化产出
AMD异步加载模块。它的模块支持对象 函数 构造器 字符串 JSON等各种类型的模块。
适用AMD规范适用define方法定义模块。

4.CMD
是SeaJS 在推广过程中对模块定义的规范化产出

AMD与CDM的区别：
（1）对于于依赖的模块，AMD 是提前执行(好像现在也可以延迟执行了)，CMD 是延迟执行。
（2）AMD 推崇依赖前置，CMD 推崇依赖就近。
（3）AMD 推崇复用接口，CMD 推崇单用接口。
（4）书写规范的差异。

5.umd
是AMD和CommonJS的糅合。

AMD 浏览器第一的原则发展 异步加载模块。

CommonJS 模块以服务器第一原则发展，选择同步加载，它的模块无需包装(unwrapped modules)。

这迫使人们又想出另一个更通用的模式
UMD （Universal Module Definition）。
希望解决跨平台的解决方案。
UMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。

argularJS：

1.jquery和 angularjs 的区别？

 jQuery在DOM上做得很好，可以根据用户交互，添加修改DOM元素。
AngularJS更关注数据展示本身，更新时会尽可能减少对DOM的破坏和重构。
AngularJS中很多特点的设计都是出于提高开发者效率的目的。
当一个项目的重点是数据展示和执行，而不是分析，此时可能AngularJS就会更胜一筹

2.ng的三种服务?哪个服务可以在config中进行调用？
Provider factory service

Provider

5.ng指令中 resctrict  是什么意思 ？EACM

生效指令
E:元素	A：属性	C：class	M：注释

9.angular版本?怎么去兼容 ie8？ng中数据一般放在哪里?

目前我们使用的是angularJS 1.5版本，如何去兼容IE8？
ng中数据一般放在控制层。

10.ng的三种服务?区别?

Provider:执行$get方法，可以在ng的config配置方法中定义变量和参数；
Factory：对$get进行封装，执行一个函数，返回一个对象；
Service：返回一个构造函数，在注入时进行实例化；

22.angular 的缺点有哪些？
（1）强约束
	导致学习成本较高，对前端不友好。
但遵守 AngularJS 的约定时，生产力会很高，对 Java 程序员友好。
（2）不利于 SEO
	因为所有内容都是动态获取并渲染生成的，搜索引擎没法爬取。
一种解决办法是，对于正常用户的访问，服务器响应 AngularJS 应用的内容；
对于搜索引擎的访问，则响应专门针对 SEO 的HTML页面。
 （3）性能问题
作为 MVVM 框架，因为实现了数据的双向绑定，
对于大数组、复杂对象会存在性能问题。

25.详述 angular 的 “依赖注入”

依赖注入是一种软件设计模式，目的是处理代码之间的依赖关系，减少组件间的耦合。

原理：
AngularJS 是通过构造函数的参数名字来推断依赖服务名称的，
通过 toString() 来找到这个定义的 function 对应的字符串，
然后用正则解析出其中的参数（依赖项），再去依赖映射中取到对应的依赖，实例化之后传入。

通常会使用下面两种方式注入依赖（对依赖添加的顺序有要求）。
（1）数组注释法	
（2）显式 $inject

26.如何看待angular2？
（1）相比 Angular1.x，Angular2的改动很大，几乎算是一个全新的框架。
（2）基于 TypeScript（可以使用 TypeScript 进行开发），在大型项目团队协作时，
	强语言类型更有利。
（3）组件化，提升开发和维护的效率。
（4）还有 module 支持动态加载，new router，promise的原生支持等等。
（5）迎合未来标准，吸纳其他框架的优点，值得期待，不过同时要学习的东西也更多了
（ES next、TS、Rx等）。

28.Angular中的digest周期是什么？

每个digest周期中，angular总会对比scope上model的值，
一般digest周期都是自动触发的，我们也可以使用$apply进行手动触发。

30.列出至少三种实现不同模块之间通信方式？

1、Service
    2、events,指定绑定的事件
3、使用 $rootScope
4、controller之间直接使用$parent, $$childHead等
5、directive 指定属性进行数据绑定

31.解释下什么是$rootScrope以及和$scope的区别？

通俗的说$rootScrope 是页面所有$scope的父亲。

step1:Angular解析ng-app然后在内存中创建$rootScope。

step2:angular回继续解析，找到{{}}表达式，并解析成变量。

step3:接着会解析带有ng-controller的div然后指向到某个controller函数。
这个时候在这个controller函数变成一个$scope对象实例。


7、为什么利用多个域名来存储网站资源会更有效？
CDN缓存更方便
突破浏览器并发限制
节约cookie带宽
节约主域名的连接数，优化页面响应速度
防止不必要的安全问题

10、简述一下src与href的区别。
src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。

11、知道的网页制作会用到的图片格式有哪些？

png-8，png-24，jpeg，gif，svg。webp：

webp： goole开发加快图片加载速度格式，压缩体积是jpg的2/3，
节省服务器宽带和数据，同质量体积比jpg小40%

13、在css/js代码上线之后开发人员经常会优化性能，
从用户刷新网页开始，一次js请求一般情况下有哪些地方会有缓存处理？

答案：dns缓存，cdn缓存，浏览器缓存，服务器缓存。

15、你如何理解HTML结构的语义化？　
去掉或样式丢失的时候能让页面呈现清晰的结构：
屏幕阅读器（如果访客有视障）会完全根据你的标记来“读”你的网页.
搜索引擎的爬虫也依赖于标记来确定上下文和各个关键字的权重
便于团队开发和维护

16、谈谈以前端角度出发做好SEO需要考虑什么？
了解搜索引擎如何抓取网页和如何索引网页
Meta标签优化
如何选取关键词并在网页中放置关键词
了解主要的搜索引擎
主要的互联网目录
按点击付费的搜索引擎
搜索引擎登录
链接交换和链接广泛度（Link Popularity）
合理的标签使用

18、CSS都有哪些选择器？

派生（标签）选择器（用HTML标签申明）
id选择器（用DOM的ID申明）
类选择器（用一个样式类名申明）
属性选择器
后代选择器
群组选择器

19、CSS中可以通过哪些属性定义，使得一个DOM元素不显示在浏览器可视范围内？

最基本的：
display:none; visibility:hiddle
技巧性：
设置宽高为0，设置透明度为0，设置z-index位置在-1000

20、超链接访问过后hover样式就不出现的问题是什么？如何解决？
排列顺序: L-V-H-A（link,visited,hover,active）


21,浏览器还有默认的天生inline-block元素
<input> 、<img> 、<button> 、<texterea> 、<label>。

25、什么是外边距重叠？重叠的结果是什么？
外边距重叠就是margin-collapse。

折叠结果遵循下列计算规则：
两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。
两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。
两个外边距一正一负时，折叠结果是两者的相加的和。

26、rgba()和opacity的透明效果有什么不同？

rgba()和opacity都能实现透明效果，但最大的不同是opacity作用于元素，
以及元素内的所有内容的透明度，
而rgba()只作用于元素的颜色或其背景色。（设置rgba透明的元素的子元素不会继承透明效果

27、css中可以让文字在垂直和水平方向上重叠的两个属性是什么？
垂直方向：line-height
水平方向：letter-spacing
那么问题来了，关于letter-spacing的妙用知道有哪些么？
答案:可以用于消除inline-block元素间的换行符空格间隙问题。

那么问题来了，如何垂直居中一个<img>?（用更简便的方法。）
1	#container     //<img>的容器设置如下
{
    display:table-cell;
    text-align:center;
    vertical-align:middle;
}

31、Sass、LESS是什么？大家为什么要使用他们？
他们是CSS预处理器。他是CSS上的一种抽象层。他们是一种特殊的语法/语言编译成CSS。

38、html语义化是什么？
当页面样式加载失败的时候能够让页面呈现出清晰的结构
有利于seo优化，利于被搜索引擎收录（更便于搜索引擎的爬虫程序来识别）
便于项目的开发及维护，使html代码更具有可读性，便于其他设备解析。

40、IE的双边距BUG：块级元素float后设置横向margin，ie6显示的margin比设置的较大。
解决：加入_display：inline

43、对WEB标准以及W3C的理解与认识

答：标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、
使用外 链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、
内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，
容易维 护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性。

44、行内元素有哪些?块级元素有哪些?CSS的盒模型?
答：块级元素：div p h1 h2 h3 h4 form ul
行内元素: a b br i span input select
Css盒模型:内容，border ,margin，padding

45、前端页面有哪三层构成，分别是什么?作用是什么?
答：结构层 Html 表示层 CSS 行为层 js。s


64、列举浏览器对象模型BOM里常用的至少4个对象，并列举window对象的常用方法至少5个

对象：Window document location screen history navigator
方法：Alert() confirm() prompt() open() close() 

问题：项目的真实性，周期，以及给那些公司做项目，举例说出来几个？？ 
1.如何评价上一家公司的？？？ 

上一家也是教会了我很多的，只是这边的技术更新比较缓慢，对自己没有一个发展前途。
上海毕竟是一个大城市，我觉得应该可以很好的提升自己

 2.你平常的开发流程是怎么样？ 

//我们以前基本的流程是，领导或甲方提出需求，然后产品分析需求，
并且根据需求画出原型图，然后根据原型图出设计稿。 
// 拿到psd文件->沟通->分析页面素材->提取素材->分析布局->
测量需要用到的数据(如边距、宽、高等)->改reset.css样式->写HTML->写css。
而图中也需要一步步的去调各浏览器的兼容问题。 
先是集体开会，讨论一些技术方案，ui提供设计图 
根据设计图讨论开会一些技术要点和工具分配，
 
3.你在上一家公司担任的什么样的角色？
 使用html和css进行页面架构的搭建，js和jq的逻辑代码的编写 

4.你平常开发遇到哪些问题？是怎样解决的？
 
5.项目已经上线了，如何做更新？测试的时间是几点？ 

6.如果工作中，已经进行开发，产品原型有修改，你们是怎么样处理的？ 

7.你们项目一般几个前端？如何分工的？
